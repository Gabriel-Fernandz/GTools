#!/usr/bin/env python

"""board.

Usage:
  board list
  board reset
  board set
  board set <board>
  board (-h | --help)
  board --version

Options:
  -h --help     Show this screen.
  --version     Show version.


"""

from docopt import docopt

import os
import subprocess
import json
import dialog
import glob
import termios

myGtools_path = os.environ['GTOOLS_PATH']
dial = dialog.Dialog(dialog="dialog")

nom_fichier_conf = ".conf"

def Get_Board_List():
	repertoire = myGtools_path+ '/Boards/'
	tous_les_elements = glob.glob(os.path.join(repertoire, 'stm32mp*'))
	fichiers_stm32mp = [os.path.basename(fichier) for fichier in tous_les_elements if os.path.isfile(fichier)]

	fichiers_stm32mp.sort()

	return fichiers_stm32mp


def Display_Board_List(fichiers_stm32mp):
	for b in fichiers_stm32mp:
		print (".", b)

def Get_Board():

	fichiers_stm32mp = Get_Board_List()

	Boards = []

	for board in fichiers_stm32mp:
		status = True
		Boards.append((board, '', status))
		status = False

	code, s_board = dial.radiolist("Board list:", choices=Boards)

	if code == 'cancel':
		return None

	return s_board

def Board_save_config(nom):
	with open(nom_fichier_conf, 'w') as fichier_conf:
		fichier_conf.write(f"{nom}\n")

import termios
import serial

def board_reset():
	# python -c 'import termios; termios.tcsendbreak(3, 0)' 3>/dev/ttyACM0

	ser = serial.Serial('/dev/ttyACM0', 115200, timeout=1)
	fd = ser.fileno()
	termios.tcsendbreak(fd, 0)


# board = Get_Board()

# print (board)

def clear_screen():
	os.system("clear")

if __name__ == '__main__':
	arg = docopt(__doc__, version='go 1.0')

print (arg)

if arg['list']:
	Display_Board_List(Get_Board_List())

elif arg['reset']:
	board_reset()

elif arg['set']:

	config_name = arg['<board>']

	if config_name != None:
		Board_save_config(config_name)
	else:
		config_name = Get_Board()
		Board_save_config(config_name)
		clear_screen()

# else:
# 	print ("else")
